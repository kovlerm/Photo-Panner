#include "Panner.h"
#include "Camera.h"

Camera::Camera(uint8_t CP, uint8_t FP) 
{
    CameraPin=CP;
    FocusPin=FP;
    inMode (CameraPin, OUTPUT);
    pinMode (FocusPin, OUTPUT);
    digitalWrite(CameraPin, LOW);
    digitalWrite(FocusPin, LOW);
}


void Camera::Shoot(unsigned long t=(long)g_settings.m_uExp)
{
  b_shoot=true;
  li_exp=0;
  exp_time=t;
}

void Camera::Focus()
{
  b_shoot=true;
  li_tfocus=0;
}

bool Camera::isShooting() // mode 
{
    return b_shoot;
};  

unsigned long Camera::LeftShooting()
{
    return exp_time;
}  

void Camera::loop( unsigned long now){
    if (b_shoot) {
        if (li_exp==0) { // starting shooting. Need to set end of exposure
            li_exp=exp_time + now;
            digitalWrite(CameraPin, HIGH);
        }
        else if (li_exp<now) {
            b_shoot=false;
            li_exp=0;
            exp_time=0;
            digitalWrite(CameraPin, LOW);
        }
        else exp_time=li_exp-now;
    }
    else if (b_focus) {
        if (li_tfocus==0) { // starting shooting. Need to set end of exposure
            li_tfocus=focus_time + now;
            digitalWrite(FocusPin, HIGH);
        }
        else if (li_tfocus<now) {
            b_focus=false;
            li_tfocus=0;
            digitalWrite(FocusPin, LOW);
        }
    }    
}  

#ifdef DEBUG
void Camera::DUMP(const char *szText /*= 0*/) const
{
  if(szText != 0) {
    DEBUG_PRINT(szText);
  }
  DEBUG_PRINT(" Exposure="); DEBUG_PRINTDEC((int)exp_time); 
  DEBUG_PRINT(" b_shoot="); DEBUG_PRINTDEC((int)b_shoot);
  
  DEBUG_PRINT(" li_exp="); DEBUG_PRINTDEC((int)li_exp);   
  DEBUG_PRINTLN("");
}
#endif




